<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.2.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/ynws/VSUnitTestC</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>rm -rf build
mkdir build
cd build

export GTEST=/usr/src/googletest-release-1.8.0
export GMLIB=${GTEST}/build/googlemock
export GTLIB=${GMLIB}/gtest

export MAINPRJDIR=VSUnitTestC

###################################################################
# build main
###################################################################

g++ -std=c++11 -O2 -fno-exceptions -W -Wall -c ../${MAINPRJDIR}/*.cpp \
    -DLINUX -fprofile-arcs -ftest-coverage
ar r libstatic.a *.o

###################################################################
# test build
###################################################################

g++ -std=c++11 -O2 -fno-exceptions -W -Wall ../GoogleTest/*.cpp \
    -DLINUX -fprofile-arcs -ftest-coverage \
    -I../${MAINPRJDIR} libstatic.a \
    -I${GTEST}/googletest/include ${GTLIB}/libgtest.a ${GTLIB}/libgtest_main.a \
    -I${GTEST}/googlemock/include ${GMLIB}/libgmock.a ${GMLIB}/libgmock_main.a \
    -lpthread -o test

###################################################################
# exec test
###################################################################

./test --gtest_output=&quot;xml:test_result.xml&quot;

###################################################################
# gcovr
###################################################################

gcovr -r ../${MAINPRJDIR} --xml --output=Coverage.xml .
sed -ie &quot;s/filename=\&quot;/&amp;${MAINPRJDIR}\//&quot; Coverage.xml

</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.cobertura.CoberturaPublisher plugin="cobertura@1.9.8">
      <coberturaReportFile>build/Coverage.xml</coberturaReportFile>
      <onlyStable>false</onlyStable>
      <failUnhealthy>false</failUnhealthy>
      <failUnstable>false</failUnstable>
      <autoUpdateHealth>false</autoUpdateHealth>
      <autoUpdateStability>false</autoUpdateStability>
      <zoomCoverageChart>false</zoomCoverageChart>
      <maxNumberOfBuilds>0</maxNumberOfBuilds>
      <failNoReports>true</failNoReports>
      <healthyTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>8000000</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>8000000</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>7000000</int>
          </entry>
        </targets>
      </healthyTarget>
      <unhealthyTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
        </targets>
      </unhealthyTarget>
      <failingTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
        </targets>
      </failingTarget>
      <sourceEncoding>ASCII</sourceEncoding>
    </hudson.plugins.cobertura.CoberturaPublisher>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.20">
      <testResults>build/test_result.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <allowEmptyResults>false</allowEmptyResults>
    </hudson.tasks.junit.JUnitResultArchiver>
    <org.jenkinsci.plugins.stepcounter.StepCounter plugin="stepcounter@2.0.0">
      <settings>
        <org.jenkinsci.plugins.stepcounter.StepCounterSetting>
          <encoding>UTF-8</encoding>
          <filePattern>VSUnitTestC/*.cpp</filePattern>
          <filePatternExclude></filePatternExclude>
          <key>main</key>
        </org.jenkinsci.plugins.stepcounter.StepCounterSetting>
      </settings>
      <isOutput>false</isOutput>
      <outputFile></outputFile>
    </org.jenkinsci.plugins.stepcounter.StepCounter>
  </publishers>
  <buildWrappers/>
</project>